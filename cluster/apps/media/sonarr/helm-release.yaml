---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: sonarr
      version: 16.0.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  values:
    image:
      repository: ghcr.io/linuxserver/sonarr
      tag: develop-version-3.0.6.1457
    env:
      TZ: "Asia/Dubai"
      DOCKER_MODS: "inuxserver/sonarr|ghcr.io/gilbn/theme.park:sonarr"
      TP_THEME: "dracula"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          # hajimari.io/enable: "true"
          # hajimari.io/icon: "weather-sunset"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "sonarr.${SECRET_DOMAIN}"
            secretName: "sonarr-tls"
    podSecurityContext:
      runAsUser: 0
    metrics:
      enabled: true
      # serviceMonitor:
      #   interval: 3m
      #   scrapeTimeout: 1m
      # prometheusRule:
      #   enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.0.0
        env:
          port: 9794
          additionalMetrics: true
          unknownQueueItems: true
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      # media:
      #   enabled: true
      #   type: custom
      #   volumeSpec:
      #     nfs:
      #       server: "${NAS_ADD}"
      #       path: /mnt/bear/media
      #   mountPath: /media
      # backup:
      #   enabled: true
      #   type: custom
      #   volumeSpec:
      #     nfs:
      #       server: "${NAS_ADD"
      #       path: /mnt/backup/app/sonarr
      #   mountPath: /config/Backups
        readOnly: false
    resources:
      requests:
        cpu: "0.04"
        memory: "256M"
      limits:
        memory: "512M"
