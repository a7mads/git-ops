---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: kah-common-chart
      version: 1.1.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      nameOverride: *app
    image:
      repository: ghcr.io/k8s-at-home/plex
      tag: v1.27.0.5897-3940636f2
    env:
      TZ: Asia/Dubai
    service:
      main:
        type: LoadBalancer
        externalIPs:
          - 192.168.1.77
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          # hajimari.io/enable: "true"
          # hajimari.io/icon: "weather-sunset"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "plex.${SECRET_DOMAIN}"
            secretName: "plex-tls"
    podSecurityContext:
      supplementalGroups:
        - 44
        - 109
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-v1
      media:
        enabled: true
        type: nfs
        server: "${NAS_ADD}"
        path: /mnt/user/media
        mountPath: /media
        readOnly: true
    #   backup:
    #     enabled: true
    #     type: nfs
    #     server: "expanse.${SECRET_PRIVATE_DOMAIN}"
    #     path: /tycho/Apps/External/Backups/plex
    #     mountPath: /config/Backups
    #     readOnly: false
    #   transcode:
    #     enabled: true
    #     type: emptyDir
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #         - matchExpressions:
    #             - key: feature.node.kubernetes.io/custom-intel-gpu
    #               operator: In
    #               values:
    #                 - "true"
    resources:
      requests:
        # gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
        # gpu.intel.com/i915: 1
        memory: 3000Mi
